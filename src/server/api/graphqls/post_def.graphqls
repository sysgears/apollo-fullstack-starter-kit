# Post
type Post {
  id: ID!
  title: String!
  content: String!
  comments: [Comment]
}

# Comment
type Comment {
  id: ID!
  content: String!
}

# Edges for PostsQuery
type Edges {
  node: Post
  cursor: ID
}

# PageInfo for PostsQuery
type PageInfo {
  endCursor: ID
  hasNextPage: Boolean
}

# Posts relay-style pagination query
type PostsQuery {
  totalCount: Int
  edges: [Edges]
  pageInfo: PageInfo
}

extend type Query {
  # Posts pagination query
  postsQuery(first: Int, after: ID): PostsQuery
  # Post
  post(id: ID!): Post
}

extend type Mutation {
  # Create new post
  addPost(input: AddPostInput!): Post
  # Delete a post
  deletePost(id: ID!): Post
  # Edit a post
  editPost(input: EditPostInput!): Post
  # Add comment to post
  addComment(input: AddCommentInput!): Comment
  # Delete a comment
  deleteComment(id: ID!): Comment
  # Edit a comment
  editComment(input: EditCommentInput!): Comment
}

input AddPostInput {
  title: String!
  content: String!
}

input EditPostInput {
  id: ID!
  title: String!
  content: String!
}

input AddCommentInput {
  content: String!
  postId: ID!
}

input EditCommentInput {
  id: ID!
  content: String!
}