# Database counter
type Count {
  # Current amount
  amount: Int!
}

#Post
type Post {
  id: ID!
  title: String!
  content: String!
  comments: [Comment]
}

#Comment
type Comment {
  id: ID!
  content: String!
}

#Edges for PostsQuery
type Edges {
  node: Post
  cursor: ID
}

#PageInfo for PostsQuery
type PageInfo {
  endCursor: ID
  hasNextPage: Boolean
}

type PostsQuery {
  totalCount: Int
  edges: [Edges]
  pageInfo: PageInfo
}

type Query {
  # Counter
  count: Count
  #Posts pagination query
  postsQuery(first: Int, after: ID): PostsQuery
  #Post
  post(id: ID!): Post
}

type Mutation {
  # Increase counter value, returns current counter amount
  addCount(
    # Amount to add to counter
    amount: Int!
  ): Count
}

type Subscription {
  # Subscription fired when anyone increases counter
  countUpdated(ids: String): Count
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
